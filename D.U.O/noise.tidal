
----dn

do
    let jathi =  (jathis 7 1 0.8 [7,7,5,6,4,4,5,1,3,3])
        jathip = (jathis 5 0.6 0.4  [7,7,5,6,4,4,5,1,3,3])
        re a = repeatCycles a
    d2
      -- $ spfx1
      $ degradeBy 0.5
      $ fast 2
      $ selectF ("<1 2 4 4 4 2 1 2 1 3 3>") [re 4,re 3 ,re 2,re 1]
      $ sometimes (tala 7 5 (irand 45))
      $ stack [ 
              (240 <~)
              -- $ g
              $ within (0.2,1) (plyWith "<3 4 4>" (|+ nl))
              $ sound "blips*4" # speed 1.1 # pan (jathip) 
              # n (choose [7,5,6,12]) 
            --   # n (choose [9,8])
            ,
            within (0.2,0.4) (plyWith "<3 4 14>" (|+ speed 2)) $
            within (0.49,0.67) (plyWith 3 (|* gain 0.95)) $
            bpm (slow 3 $ smooth  $ scramble 1 "120 120 16 110 160 40 100 60 100")
            >| sew "f" (s "yin2*1" # gain 1.4) (s"dn2*10") # nr  # cut 1 
              -- # release 0.8
              # accelerate (range (-0.5) 0.5 $ (rand))
              # begin (slow 6 $ smooth  $ scramble 8 "0 0.6 0.4 0.98 0 0.1 0.3 0.8 0.6")
              ]
      # (gain $ jathi) 

hush




d1 
$ "superfork*10"
# n (slow 100 $ run 100)


------fknoise
d2
$ degradeBy (rise1 3 0 0.4)
$ bone
$ loopAt (toRational <$> (rise1 (range 0.1 5 $ rand) 0.1 0.4 )) ---- (2) 
-- $ every 4 (fast 2)
-- $ superimpose ((rev).(|* gain (range 0.8 1 $ slow 10 $ sine)))
$ slow 2
-- $ degradeBy 0.4
-- $ chop (round <$>(slow 12 $ range 2 40 $ sine))
$ striateBy 50 0.1
$ tala 5 4 (irand 30)
$ sound "dn2"
# nl
# lpf (range 100 5000 $ perlin + 0.3)  ----(1)
# (slow 3.4 $ nl)
-- # accelerate (rise1 4 1 4)
|+ begin (osc 5 2 0.2 0.9 saw)
# release (jathis 5 1.1 0.4 [2,1,3,3,5,7,2,1,2,3,4,7])
# gain 0.8


hush