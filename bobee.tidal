d1 
$ slice 16 (struct "{[f t*2] <t f t t t t>*4 [<f f f t> t*1]}" $ (irand 16 + (slow 12 $ run 4)))
$ s "bb" 
# nl
# cps 0.7
# gain "1.4"  
# cut 1
+ speed "2 -1 -2"
-- |+ release (osc64 2.5 0.2 1.2 saw)




hush






d3 
-- $ slow 1.2
$ linger 0.75
-- $ every 5 (within (0.5,0.75) (fast 2))
-- $ every 6 (within (0.75,1) (degrade).(fast 2))
-- $ superimpose ((degradeBy 0).(juxBy 0.4 rev))
-- $ slice 8 ("{[0 <1>] [3 2] 4 5 [7] 6}%8") "[bb]"
$ slice 8 ("{[1 2] <[3] 1> 4 5 [3] 6 7 1}%8") "[bb]"
-- + n (segment "<1 2 2>" $ slow 117 $ run 120)
-- # n8 + 4
-- # n 14
# nl
-- # n 108
-- 8 + 16
# cut 1
-- # atrl 0 0.28
# bpm 128
-- # sp 0.8
-- # sp "{0.8 1 1 1 1 1 1 1 1 0.8 0.8}%12"

hush




d1 $ s "bb" # nl

hush


p "b1"
$ slow 1.2
-- $ every 2 (|+ n 1)
$ stack [
        -- every 2 (inside 4 (rot 1)) $
        -- repeatCycles 2 $    
        slice 8 "1 3 2 0 [4 ~] 5 7 [6 ~]" "bb" # (slow "1" $ nl) + n 4
        ]
# bpm 128




p "monba"
$ slow  2
-- $ every 4 (rot "2")
$ stack [
        slice 8 "0 2 4 [6 ~ ~ [5]]" "bb"
        ,
        -- g $
        -- every 4 (rot 2) $
        fast 4 $ every 3 (0.25 <~) $ slice 8 "~ ~ ~ <[[1 3] 5] 7>" "bb"
        ,
        -- g $
        slice 8 "1 3 2 0 [4 ~] 5 7 [6 ~]" "bb" # (slow 0.5 $ nl) # gain 0.7
        ,
        g $
        fast 4 $ every 2 (0.25 <~) $ s "~ <~ ~ ~ ~ sn> ~ sn"   
        ]
        # release 0.17
        -- # begin (osc 16 32 0 0.9 sine)
        # hold 2.52
        # (slow 0.5 $ nl)
# cps 1
# n8

hush