TT 114 samples 130 bpm

bps (130/120)

d2
$sound "tt4b*20"
|+| speed (fast (choose [15.0006,15.0005..15.0000]) $ scale 0.97 1.03 $saw)
# gain 0.8

d2 silence


hush

d1
$ rev
$ sound "tt4b*8"
# n (slow 114 (run 114))
|+| n (fast 2 (run 4))
# release "1.2"
-- # speed "-1"

d1
-- $ every 4 (zoom(0.1,0.5))
-- $ every 6 (|+| begin (choose [(2/16),(5/16),(9/16)]))
$ every 2 ((|+| begin (8/16)).(|+| speed (scale 0.75 1.1 saw1)))
$ every 5 ((|+| begin (choose [(3/16),(8/32),(1/16)])).(|-| speed (scale 1.1 0.4 saw1)))
$ every 12 (within (0,0.25) ((rev).(stut 10 0.3 0.1)))
$ sound "tt4b(13,17)"
-- # n "45"
|+| n (slow 67 (run 114))
-- |+| n (fast (choose [8,8.3..14]) (run 30))
# cut 1
-- |+| begin (slow 20 $ scale  1 $ saw1)
-- # release "[0.8 [0.7 ~]]*5"


d1
$ juxBy 0.4 (slow 2)
$ sound "tt4b*16"
# n (slow 114 (run 114))
|+| n (fast 2 (run 6))
# release "[1.2 [0.7 0.4]*5 [0.5? ~]]*5"

hush

do
  cps 1.2

  d4
  $ slow 2
  -- $ density "1"
  -- $ rev
  -- $ every 1 (sometimes $ jux ((slow "<1,2,3,4,5>").(|*|speed (slow 3 "[1,1.05..2]"))))
  $ every 2 (sometimes $ juxBy 0.2 ((|+| n "[1,2,3]").(slow 5).(|+|up "1")))
  -- $ loopAt (fast 4 (choose[0.75,1..1.75]))
  -- $ every 3 (sometimes $ juxBy 0.8 ((|+| n "0").(slow 3)))
  -- $ loopAt "[2,1,1.5,1.4]"
  ( sound "tt*20"
  |+| speed (fast (choose [15.0006,15.0005..15.0000]) $ scale 0.97 1.03 $saw)
  # begin ((scale 0.02 0.98 $saw1))
  # release (slow 20 (scale 0.125 2 $sine))
  # attack (slow 20 (scale 0.02 0.3 $sine))
  )
  |=| n "[0,1..68]/68"
  -- # lpf (slow 4 (scale 10000 5000 $sine1))
  -- # pan (fast 40 $ rand)
  # cut 1
  # delayfb (discretise (1/12) (slow 10 (scale 0.6 0.4 $sine1)))
  # delayt (discretise (1/15) (slow 12 (scale 0.01 0.3 $sine1)))
  # delay (discretise (1/12) (slow 10 (scale 0.8 0.5 $sine1)))
  -- |=| speed (slow (choose[0.5,0.75..4]) "<1.1,1.12..1.6>")
  -- # nudge (fast 10 (scale 0.2 2 $sine1))
  |=| speed "1.1"

d1 silence

hush



d1 silence

2.7*8

bps (0.55)

hush


d2 $ sound "[tt]"
|=| n "[0,1..68]/69"
# cut 1


cps 0.5


d2
-- $ every 8 (|=| accelerate (choose [-1,0..2]))
-- $ density (slow 2 $ run 4)
$ every 2 (sometimes $ juxBy 0.2 ((|+| n "[4]").(slow 4)))
-- $ every 6 ((rev))
-- $ every 7 (loopAt (fast 4 (choose[0.75,1..1.75])))
$ every 3 (sometimes $ juxBy 0.8 ((|+| n "0").(slow 3)))
-- $ superimpose ((# speed "[1.2?,1.5?]").(density 3).(slow 4))
-- $ loopAt "[1]"
( sound "[tt*20]"
-- |=| speed "[1]"
|+| speed (fast (choose [15.0006,15.0005..15.0000]) $ scale 0.95 1.02 $rand)
)
|=| gain ((scalex 0.7 1 $ rand))
# begin (slow 15 (scale 0.02 0.98 $sine1))
# release (slow 20 (scale 0.35 3 $sine1))
# attack (slow 12 (scale 0.07 0.4  $sine1))
-- |=| n "[1,2..40]/4"
# n (slow 2 (irand 52))
-- # lpq "0.1"
# nudge (slow 5 (scale 0.3 2.5 (slow 13 $ saw1)))
-- # lpf (slow 6 (scale 1000 7000 (fast 0.3 $ sine1)))
# delayfb (discretise (1/15) (slow 10 (scale 0.6 0.4 $sine1)))
# delayt (discretise (1/20) (slow 10 (scale 0.02 0.3 $sine1)))
# delay (discretise (1/15) (slow 10 (scale 0.2 0.5 $sine1)))
# cut 0
# size (slow 5 (choose[0.4,0.5,0.8,0.7]))
# room "0.3"
-- |=| speed (slow (choose[0.5,0.75..4]) "<1.1,1.12..1.2>")
-- # orbit 1
-- |+| lpf (slow 8 (scalex 2000 7000 $ saw1))
-- |+| hpf (slow 9(scalex 1000 4000 $ sine1))

hush

do
  cps 1.5
  d1
    -- $ every 10 (stut 10 0.5 0.7)
    $
    superimpose (### [shape 0.2, gain 0.55, cutoff 4000, hcutoff 1000])
    -- $ superimpose (inside 2 (spread ($) [id,rev, id, (|*| speed "<-1>"), id, ((stut 4 0.125 (-1/4)).(zoom ((1/6), (3/4)))), id, ((fast "<1 2 2.5 2 0.75>").(|*| release 0.3)), id])
    -- )-- $
    -- foldEvery [9,21] ((slow 0.8).(rev))
    $
    stack [
      loopAt "<5>" $ chop "12" $ s "[tt]"  |+| n (slow 12 (run 14))  ,
      slow 1
      $ superimpose
      (### [speed (1/3), hcutoff 2000, release 0.5 , speed "0.4"])
      $ s "tt" |*| gain (scale 0.65 0.25 (slow 10 $ sine1))]
   |+| n (slow 52 (run 53))
   |=| release "2"
   -- # hbrick "0.01"
   -- # smear "0.01"
   -- # freeze "1"
   # cut 0
   -- # orbit 1
   -- # scram "0.6 0.3"



  hush
