
d2
-- $ layer [id,(loopAt 10).(#accelerate 1.2),( # pan rand).(#accelerate (-0.5))]
$ struct bizy
$ s "[red1]"
# speed (slow 0.25 $ smooth $ "<1 1.5 -1> 1 1 2")
* speed (-1)
# cps (slow (osc64 5 40 1 sine) $ segment 16 $ range 1.25 2.75 $ saw)
# nl
# gain 1

hush

d3
$ layer [id,(loopAt 10).(#accelerate 0.5),( # pan rand).(#accelerate (-0.5))]
$ stack  [
  g $
   splice 8 "1*2 ~ 5*2 ~ 7 8*5 " $
    struct bizy $  
    s "[kperc3,kins02]" 
    -- # lpf (osc64 12 100 15000 sine)
    # gain 1.2
    # nr
    ,
    slow "<2 1 3 2 1 1>" $ 
    s "w03 [w02 ~]"
]
# end (range 0.55 4.05 $ rand)
# begin (range 0 0.15 $ rand)
# speed (range 0.3 1.6 $ rand)
|* speed (choose [(-1),1])
-- # cps (slow (osc64 5 40 1 sine) $ segment 16 $ range 1.25 3.75 $ sine)


hush

do
    let 
        spat = "[2 ~ ~ ~ ~ ~ <1> ~ ~ ~]"
        fpat = "[0 ~ ~ ~ ~ ~ 127 ~ ~ ~]"
        dpat = "[box01*1 ~ ~ ~ ~ ~ box01*1 ~ ~ ~]"
        dgpat = "[1.3 ~ ~ ~ ~ ~ 1.6 ~ ~ ~]"
        sppat = segment "64" (otrigger saw "1 _ _ _ _ _ 1 _ _ _ ")
        mod p = spaceOut [1.2,3,1] $ p
    p "pad"
      $ g
      $ mod
      $ gain (range 1 0.7 $ smooth $ sppat )
      # s "[w01]"
     |+ begin (range 0 0.95 $ sppat)
    --  |+ speed (range "<0.75 <0.98 1.125>>*2" 0.52 $ sppat)
    --  |+ speed (range (-0.125) 0.125 $ perlin + 0.2)
    --   # cut 1
      + n (segment 4 $ range 0 127 $ cF 0 "0")         
      # release 10
      # attack 0.4
      # pan rand
    --  |+ accelerate (slow 19 $ run 3 )
    --  |- accelerate (slow 10.5 (choose [0.1,0.5..1]))
      # delay 0.4
      # delayt (segment 12 $ range 0.04 1.5 $ slow 12.2 $ rand )
      # delayfb 0.23
    p "drumpat"
      -- $ g
      $ mod
      $ s dpat
      # gain dgpat
      |+ n (iter (irand 100) $ range 0 50 $ saw )
      # room 0.2
      # size 0.6
    --   + cps (segment 31 $ slow 1 $ range 0.8 1.6 $ rand)
      + cps "<1 1.1 0.9 0.95 1.3 1.25 0.8 1.5 1 0.7 0.823 1.5 1 2 1.56>"
    --  |/ cps (segment 16 $ range 0.5 4 $ cF 0 "1") 


     hush