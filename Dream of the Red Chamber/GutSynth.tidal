#2 

d3
--   $ (# cps ("<0.4 0.6 1.3 1>" * 1.2)) 
  $ jux ((slow 3).(rev))
  $ degradeBy 0.2
  -- $ every 10 (slow ((choose [1.25,1,1,1,1.33])))
  -- $ chop "<10 19 20 10 40 55 50 50 50 15 10>"
  -- $ every 3 ((|=|accelerate "-1.05").((|+| n (slow 840 (irand 841)))))
  -- $ every 12 ((slow ((choose [1.25,1,1,1,1.33]))).((|+| n (slow 100 (irand 4)))))
  $ striate' ("<220 [250 130] 120 60>") (slow 10.2 $ range 0.7 0.2 $ saw )
  (sound "red1"
  # nl
--   + n (slow "7" $ segment 1 $ irand 20)
  # cut 0
  -- # pan (range 0.2 0.8 rand)
  # speed "-1 1 1"
  -- # up (osc64 12 0 7 sine)
  # gain (slow 10 (range 1 0.8 sine))
  -- # cutoff (slow 12 (range 2000 5000 sine))
  -- # waveloss (slow 30 $ range 0 6 $ sine)
  )
  -- # comb (slow 19 $ range 0.2 0.7 $ sine)
  # cps 0.7

hush

--#1
 
d1
$ every 4 (rev)
$ every 3 (palindrome)
-- $ every 11 (|+ speed (rise1 7 1  ))
$ every 7 (+ speed (rise1 20 1 1.9 ))
-- $ fast 2
$ plyWith "<14 30 26 25>" ((|* gain 0.91 ).(# pan "<0.1 0.9>"))
$ s "[red1*0,kins2:4]"
# nl
# cps "<2.5 0.8 1.75 1.6 1 1.05 1.1 1.2 0.9 0.7>" |- cps 0.5
-- *| cps (osc 12 0.5 1 saw) 
# attack 0.15
# release 2.5
# octer 0.3
# speed "[1.2]"
-- # comb ((slow 4.3 $ range 0.67 0.72 $ sine)*(slow 25.2 $ range 1 0.02 $ sine))
# lpf (slow 12.2 $ range 200 9000 $ sine)

hush


#3

d3 
$ (# cps ("<2.5 0.8 1.75 1.6 1 1.05 1.1 1.2 0.9 0.7>" * (range 0.5 1 $ slow 14.1 $ saw))) 
$ stack [
        sometimes rev $ 
        whenmod 4 1 (sometimes ((degradeBy 0.4).(# speed (perlin + 0.3)).(fast (range 2 4 $ sine)))) $
        slow 10 $ striate' "<120 223 200 180 140>" (slow 14.5 $ range 0.42 0.47 $ sine) 
        $ plyWith "<22 18 16>" ((|* gain 0.87).(|+ att 0.55).(|+ pan sine))
        $ s "[red1]"
]
-- # attack 0.13
-- # release 0.13
# n (slow 28 $ run 17)
-- # speed (-2)
|-| gain 1


hush
